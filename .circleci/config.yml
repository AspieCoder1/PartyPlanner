version: 2
general:
  branches:
    only:
      - master
jobs:
  test-backend:
    docker:
      - image: circleci/node:14.16.0
    environment:
      NODE_OPTION: "--max_old_space_size=4096"
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "api/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Backend install
          command: cd api && yarn install

      - save_cache:
          paths:
            - /api/node_modules
          key: v1-dependencies-{{ checksum "api/package.json" }}

      # run tests!
      - run:
          name: Backend tests
          command: cd api && yarn test-ci
  test-frontend:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "frontend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Building front-end
          command: cd ./frontend && yarn install

      - save_cache:
          paths:
            - /frontend/node_modules
          key: v1-dependencies-{{ checksum "frontend/package.json" }}

      # run tests!
      - run:
          name: Front-end tests
          command: cd ./frontend && yarn test
#      - setup_remote_docker:
#          version: 19.03.13
#          docker_layer_caching: false
#      - run:
#          name: Install Docker Compose
#          command: |
#            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
#            chmod +x ~/docker-compose
#            sudo mv ~/docker-compose /usr/local/bin/docker-compose

workflows:
  version: 2
  test:
    jobs:
      - test-frontend
      - test-backend
